{
  "version": 1,
  "projects": {
    "causality": {
      "root": "libs/causality",
      "sourceRoot": "libs/causality/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/causality/**/*.js",
              "libs/causality/**/*.jsx",
              "libs/causality/**/*.ts",
              "libs/causality/**/*.tsx",
              "libs/causality/**/*.test.ts",
              "libs/causality/**/*.test.tsx",
              "libs/causality/**/*.test.js",
              "libs/causality/**/*.test.jsx",
              "libs/causality/**/*.spec.ts",
              "libs/causality/**/*.spec.tsx",
              "libs/causality/**/*.spec.js",
              "libs/causality/**/*.spec.jsx",
              "libs/causality/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/causality",
            "tsConfig": "libs/causality/tsconfig.lib.json",
            "project": "libs/causality/package.json",
            "entryFile": "libs/causality/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/causality/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/causality"]
        }
      }
    },
    "core-ui": {
      "root": "libs/core-ui",
      "sourceRoot": "libs/core-ui/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/core-ui/**/*.js",
              "libs/core-ui/**/*.jsx",
              "libs/core-ui/**/*.ts",
              "libs/core-ui/**/*.tsx",
              "libs/core-ui/**/*.test.ts",
              "libs/core-ui/**/*.test.tsx",
              "libs/core-ui/**/*.test.js",
              "libs/core-ui/**/*.test.jsx",
              "libs/core-ui/**/*.spec.ts",
              "libs/core-ui/**/*.spec.tsx",
              "libs/core-ui/**/*.spec.js",
              "libs/core-ui/**/*.spec.jsx",
              "libs/core-ui/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/core-ui",
            "tsConfig": "libs/core-ui/tsconfig.lib.json",
            "project": "libs/core-ui/package.json",
            "entryFile": "libs/core-ui/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/core-ui/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/core-ui"]
        }
      }
    },
    "counterfactuals": {
      "root": "libs/counterfactuals",
      "sourceRoot": "libs/counterfactuals/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/counterfactuals/**/*.js",
              "libs/counterfactuals/**/*.jsx",
              "libs/counterfactuals/**/*.ts",
              "libs/counterfactuals/**/*.tsx",
              "libs/counterfactuals/**/*.test.ts",
              "libs/counterfactuals/**/*.test.tsx",
              "libs/counterfactuals/**/*.test.js",
              "libs/counterfactuals/**/*.test.jsx",
              "libs/counterfactuals/**/*.spec.ts",
              "libs/counterfactuals/**/*.spec.tsx",
              "libs/counterfactuals/**/*.spec.js",
              "libs/counterfactuals/**/*.spec.jsx",
              "libs/counterfactuals/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/counterfactuals",
            "tsConfig": "libs/counterfactuals/tsconfig.lib.json",
            "project": "libs/counterfactuals/package.json",
            "entryFile": "libs/counterfactuals/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/counterfactuals/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/counterfactuals"]
        }
      }
    },
    "dashboard": {
      "root": "apps/dashboard",
      "sourceRoot": "apps/dashboard/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "baseHref": ".",
            "outputPath": "dist/apps/dashboard",
            "index": "apps/dashboard/src/index.html",
            "main": "apps/dashboard/src/main.tsx",
            "polyfills": "apps/dashboard/src/polyfills.ts",
            "tsConfig": "apps/dashboard/tsconfig.app.json",
            "progress": false,
            "memoryLimit": 4096,
            "globals": [
              {
                "moduleId": "plotly.js",
                "global": "Plotly"
              }
            ],
            "assets": [
              "apps/dashboard/src/favicon.ico",
              "apps/dashboard/src/assets"
            ],
            "styles": [],
            "scripts": [],
            "webpackConfig": "./webpack.config.js"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/dashboard/src/environments/environment.ts",
                  "with": "apps/dashboard/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "20mb",
                  "maximumError": "50mb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "dashboard:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "dashboard:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/dashboard/**/*.js",
              "apps/dashboard/**/*.jsx",
              "apps/dashboard/**/*.ts",
              "apps/dashboard/**/*.tsx",
              "apps/dashboard/**/*.test.ts",
              "apps/dashboard/**/*.test.tsx",
              "apps/dashboard/**/*.test.js",
              "apps/dashboard/**/*.test.jsx",
              "apps/dashboard/**/*.spec.ts",
              "apps/dashboard/**/*.spec.tsx",
              "apps/dashboard/**/*.spec.js",
              "apps/dashboard/**/*.spec.jsx",
              "apps/dashboard/**/*.d.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/dashboard/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/dashboard"]
        }
      }
    },
    "dashboard-e2e": {
      "root": "apps/dashboard-e2e",
      "sourceRoot": "apps/dashboard-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/dashboard-e2e/cypress.json",
            "tsConfig": "apps/dashboard-e2e/tsconfig.e2e.json",
            "devServerTarget": "dashboard:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "dashboard:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/dashboard-e2e/src/**/*.ts",
              "apps/dashboard-e2e/src/**/*.js"
            ]
          }
        }
      }
    },
    "dataset-explorer": {
      "root": "libs/dataset-explorer",
      "sourceRoot": "libs/dataset-explorer/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/dataset-explorer/**/*.js",
              "libs/dataset-explorer/**/*.jsx",
              "libs/dataset-explorer/**/*.ts",
              "libs/dataset-explorer/**/*.tsx",
              "libs/dataset-explorer/**/*.test.ts",
              "libs/dataset-explorer/**/*.test.tsx",
              "libs/dataset-explorer/**/*.test.js",
              "libs/dataset-explorer/**/*.test.jsx",
              "libs/dataset-explorer/**/*.spec.ts",
              "libs/dataset-explorer/**/*.spec.tsx",
              "libs/dataset-explorer/**/*.spec.js",
              "libs/dataset-explorer/**/*.spec.jsx",
              "libs/dataset-explorer/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/dataset-explorer",
            "tsConfig": "libs/dataset-explorer/tsconfig.lib.json",
            "project": "libs/dataset-explorer/package.json",
            "entryFile": "libs/dataset-explorer/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/dataset-explorer/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/dataset-explorer"]
        }
      }
    },
    "e2e": {
      "root": "libs/e2e",
      "sourceRoot": "libs/e2e/src",
      "projectType": "library",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "libs/e2e/cypress.json",
            "tsConfig": "libs/e2e/tsconfig.e2e.json"
          },
          "configurations": {
            "production": {
              "devServerTarget": "widget:serve:production"
            }
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/e2e",
            "tsConfig": "libs/e2e/tsconfig.lib.json",
            "project": "libs/e2e/package.json",
            "entryFile": "libs/e2e/src/index.ts",
            "external": ["react/jsx-runtime"],
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "libs/e2e/README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/e2e/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/e2e"],
          "options": {
            "jestConfig": "libs/e2e/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "error-analysis": {
      "root": "libs/error-analysis",
      "sourceRoot": "libs/error-analysis/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/error-analysis/**/*.js",
              "libs/error-analysis/**/*.jsx",
              "libs/error-analysis/**/*.ts",
              "libs/error-analysis/**/*.tsx",
              "libs/error-analysis/**/*.test.ts",
              "libs/error-analysis/**/*.test.tsx",
              "libs/error-analysis/**/*.test.js",
              "libs/error-analysis/**/*.test.jsx",
              "libs/error-analysis/**/*.spec.ts",
              "libs/error-analysis/**/*.spec.tsx",
              "libs/error-analysis/**/*.spec.js",
              "libs/error-analysis/**/*.spec.jsx",
              "libs/error-analysis/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/error-analysis",
            "tsConfig": "libs/error-analysis/tsconfig.lib.json",
            "project": "libs/error-analysis/package.json",
            "entryFile": "libs/error-analysis/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/error-analysis/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/error-analysis"]
        }
      }
    },
    "fairness": {
      "root": "libs/fairness",
      "sourceRoot": "libs/fairness/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/fairness/**/*.js",
              "libs/fairness/**/*.jsx",
              "libs/fairness/**/*.ts",
              "libs/fairness/**/*.tsx",
              "libs/fairness/**/*.test.ts",
              "libs/fairness/**/*.test.tsx",
              "libs/fairness/**/*.test.js",
              "libs/fairness/**/*.test.jsx",
              "libs/fairness/**/*.spec.ts",
              "libs/fairness/**/*.spec.tsx",
              "libs/fairness/**/*.spec.js",
              "libs/fairness/**/*.spec.jsx",
              "libs/fairness/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/fairness",
            "tsConfig": "libs/fairness/tsconfig.lib.json",
            "project": "libs/fairness/package.json",
            "entryFile": "libs/fairness/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/fairness/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/fairness"]
        }
      }
    },
    "forecasting": {
      "root": "libs/forecasting",
      "sourceRoot": "libs/forecasting/src",
      "projectType": "library",
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/forecasting",
            "tsConfig": "libs/forecasting/tsconfig.lib.json",
            "project": "libs/forecasting/package.json",
            "entryFile": "libs/forecasting/src/index.ts",
            "external": ["react/jsx-runtime"],
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "libs/forecasting/README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/forecasting/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/forecasting"],
          "options": {
            "jestConfig": "libs/forecasting/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "interpret": {
      "root": "libs/interpret",
      "sourceRoot": "libs/interpret/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/interpret/**/*.js",
              "libs/interpret/**/*.jsx",
              "libs/interpret/**/*.ts",
              "libs/interpret/**/*.tsx",
              "libs/interpret/**/*.test.ts",
              "libs/interpret/**/*.test.tsx",
              "libs/interpret/**/*.test.js",
              "libs/interpret/**/*.test.jsx",
              "libs/interpret/**/*.spec.ts",
              "libs/interpret/**/*.spec.tsx",
              "libs/interpret/**/*.spec.js",
              "libs/interpret/**/*.spec.jsx",
              "libs/interpret/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/interpret",
            "tsConfig": "libs/interpret/tsconfig.lib.json",
            "project": "libs/interpret/package.json",
            "entryFile": "libs/interpret/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/interpret/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/interpret"]
        }
      }
    },
    "interpret-text": {
      "root": "libs/interpret-text",
      "sourceRoot": "libs/interpret-text/src",
      "projectType": "library",
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/interpret-text",
            "tsConfig": "libs/interpret-text/tsconfig.lib.json",
            "project": "libs/interpret-text/package.json",
            "entryFile": "libs/interpret-text/src/index.ts",
            "external": ["react/jsx-runtime"],
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "libs/interpret-text/README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/interpret-text/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/interpret-text"],
          "options": {
            "jestConfig": "libs/interpret-text/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "interpret-vision": {
      "root": "libs/interpret-vision",
      "sourceRoot": "libs/interpret-vision/src",
      "projectType": "library",
      "architect": {
        "build": {
          "builder": "@nrwl/web:package",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/libs/interpret-vision",
            "tsConfig": "libs/interpret-vision/tsconfig.lib.json",
            "project": "libs/interpret-vision/package.json",
            "entryFile": "libs/interpret-vision/src/index.ts",
            "external": ["react/jsx-runtime"],
            "rollupConfig": "@nrwl/react/plugins/bundle-rollup",
            "assets": [
              {
                "glob": "libs/interpret-vision/README.md",
                "input": ".",
                "output": "."
              }
            ]
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/interpret-vision/**/*.{ts,tsx,js,jsx}"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/interpret-vision"],
          "options": {
            "jestConfig": "libs/interpret-vision/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "localization": {
      "root": "libs/localization",
      "sourceRoot": "libs/localization/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/localization/**/*.js",
              "libs/localization/**/*.jsx",
              "libs/localization/**/*.ts",
              "libs/localization/**/*.tsx",
              "libs/localization/**/*.spec.ts",
              "libs/localization/**/*.spec.tsx",
              "libs/localization/**/*.spec.js",
              "libs/localization/**/*.spec.jsx",
              "libs/localization/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/localization",
            "tsConfig": "libs/localization/tsconfig.lib.json",
            "project": "libs/localization/package.json",
            "entryFile": "libs/localization/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/localization/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/localization"]
        }
      }
    },
    "mlchartlib": {
      "root": "libs/mlchartlib",
      "sourceRoot": "libs/mlchartlib/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/mlchartlib/**/*.js",
              "libs/mlchartlib/**/*.jsx",
              "libs/mlchartlib/**/*.ts",
              "libs/mlchartlib/**/*.tsx",
              "libs/mlchartlib/**/*.test.ts",
              "libs/mlchartlib/**/*.test.tsx",
              "libs/mlchartlib/**/*.test.js",
              "libs/mlchartlib/**/*.test.jsx",
              "libs/mlchartlib/**/*.spec.ts",
              "libs/mlchartlib/**/*.spec.tsx",
              "libs/mlchartlib/**/*.spec.js",
              "libs/mlchartlib/**/*.spec.jsx",
              "libs/mlchartlib/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/mlchartlib",
            "tsConfig": "libs/mlchartlib/tsconfig.lib.json",
            "project": "libs/mlchartlib/package.json",
            "entryFile": "libs/mlchartlib/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/mlchartlib/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/mlchartlib"]
        }
      }
    },
    "model-assessment": {
      "root": "libs/model-assessment",
      "sourceRoot": "libs/model-assessment/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/model-assessment/**/*.js",
              "libs/model-assessment/**/*.jsx",
              "libs/model-assessment/**/*.ts",
              "libs/model-assessment/**/*.tsx",
              "libs/model-assessment/**/*.test.ts",
              "libs/model-assessment/**/*.test.tsx",
              "libs/model-assessment/**/*.test.js",
              "libs/model-assessment/**/*.test.jsx",
              "libs/model-assessment/**/*.spec.ts",
              "libs/model-assessment/**/*.spec.tsx",
              "libs/model-assessment/**/*.spec.js",
              "libs/model-assessment/**/*.spec.jsx",
              "libs/model-assessment/**/*.d.ts"
            ]
          }
        },
        "build": {
          "builder": "@nrwl/web:package",
          "options": {
            "outputPath": "dist/libs/model-assessment",
            "tsConfig": "libs/model-assessment/tsconfig.lib.json",
            "project": "libs/model-assessment/package.json",
            "entryFile": "libs/model-assessment/src/index.ts",
            "external": [
              "@fluentui/react",
              "highcharts",
              "jmespath",
              "localized-strings",
              "lodash",
              "memoize-one",
              "moment",
              "plotly.js",
              "react-plotly.js",
              "react",
              "react-dom",
              "uuid"
            ],
            "rollupConfig": "./rollup.config.js",
            "assets": [
              {
                "glob": "README.md",
                "input": ".",
                "output": "."
              }
            ],
            "buildableProjectDepsInPackageJsonType": "dependencies"
          },
          "outputs": ["{options.outputPath}"]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/model-assessment/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/libs/model-assessment"]
        }
      }
    },
    "widget": {
      "root": "apps/widget",
      "sourceRoot": "apps/widget/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "baseHref": "/widget/",
            "outputPath": "raiwidgets/raiwidgets/widget",
            "index": "apps/widget/src/index.html",
            "main": "apps/widget/src/main.tsx",
            "polyfills": "apps/widget/src/polyfills.ts",
            "tsConfig": "apps/widget/tsconfig.app.json",
            "progress": false,
            "memoryLimit": 4096,
            "globals": [
              {
                "moduleId": "plotly.js",
                "global": "Plotly"
              }
            ],
            "assets": ["apps/widget/src/favicon.ico", "apps/widget/src/assets"],
            "styles": [],
            "scripts": [],
            "webpackConfig": "./webpack.config.js"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/widget/src/environments/environment.ts",
                  "with": "apps/widget/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "20mb",
                  "maximumError": "50mb"
                }
              ]
            }
          },
          "outputs": ["{options.outputPath}"]
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "widget:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "widget:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/widget/**/*.js",
              "apps/widget/**/*.jsx",
              "apps/widget/**/*.ts",
              "apps/widget/**/*.tsx",
              "apps/widget/**/*.test.ts",
              "apps/widget/**/*.test.tsx",
              "apps/widget/**/*.test.js",
              "apps/widget/**/*.test.jsx",
              "apps/widget/**/*.spec.ts",
              "apps/widget/**/*.spec.tsx",
              "apps/widget/**/*.spec.js",
              "apps/widget/**/*.spec.jsx",
              "apps/widget/**/*.d.ts"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/widget/jest.config.js",
            "passWithNoTests": true
          },
          "outputs": ["coverage/apps/widget"]
        }
      }
    },
    "widget-e2e": {
      "root": "apps/widget-e2e",
      "sourceRoot": "apps/widget-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/widget-e2e/cypress.json",
            "tsConfig": "apps/widget-e2e/tsconfig.e2e.json"
          },
          "configurations": {
            "production": {
              "devServerTarget": "widget:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/widget-e2e/src/**/*.ts",
              "apps/widget-e2e/src/**/*.js"
            ]
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/react"
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "style": "none",
        "linter": "eslint",
        "babel": true
      },
      "library": {
        "style": "none",
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      },
      "component": {
        "style": "none"
      }
    },
    "@nrwl/next": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/nx-plugin": {
      "plugin": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "dashboard"
}
