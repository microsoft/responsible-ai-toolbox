name: CI Vision Notebooks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    paths:
      - "raiwidgets/**"
      - "responsibleai_vision/**"
      - ".github/workflows/CI-notebook-vision.yml"
      - "libs/e2e/src/lib/describer/modelAssessment/**"
      - "libs/interpret-vision/**"
      - "notebooks/**"

jobs:
  ci-notebook-vision:
    env:
      node-version: 16.x
    strategy:
      matrix:
        operatingSystem: [ubuntu-latest]
        pythonVersion: [3.8, 3.9, "3.10"]

    runs-on: ${{ matrix.operatingSystem }}

    steps:
      - uses: actions/checkout@v4

      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: ${{ matrix.pythonVersion }}

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}

      - name: Install yarn
        run: npm install yarn -g

      - name: Install yarn dependencies
        run: |
          yarn config set network-timeout 300000
          yarn install --frozen-lock-file

      - name: Build Typescript
        run: yarn buildall

      - if: ${{ matrix.operatingSystem != 'macos-latest' }}
        name: Install pytorch on non-MacOS
        shell: bash -l {0}
        run: |
          conda install --yes --quiet "pytorch<2.1,>1.13.1" "torchvision<0.16" cpuonly "numpy<1.24.0" -c pytorch

      - if: ${{ matrix.operatingSystem == 'macos-latest' }}
        name: Install Anaconda packages on MacOS, which should not include cpuonly according to official docs
        shell: bash -l {0}
        run: |
          conda install --yes --quiet "pytorch<2.1,>1.13.1" "torchvision<0.16" "numpy<1.24.0" -c pytorch

      - name: Setup tools
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install --upgrade "pip-tools<=7.1.0"

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          pip install captum
          pip install -r requirements-dev.txt
          pip install .
        working-directory: raiwidgets

      - name: Install vision dependencies
        shell: bash -l {0}
        run: |
          pip install -r requirements-dev.txt
          pip install .
        working-directory: responsibleai_vision

      - if: ${{ matrix.operatingSystem == 'windows-latest' }}
        name: Install older pyarrow to fix CI getting stuck on Windows
        shell: bash -l {0}
        run: |
          pip install --force-reinstall pyarrow==11.0.0
          pip install "numpy<=1.26.2"

      - name: Pip freeze
        shell: bash -l {0}
        run: |
          pip freeze > installed-requirements-dev.txt
          cat installed-requirements-dev.txt
        working-directory: raiwidgets

      - name: Upload requirements
        uses: actions/upload-artifact@v3
        with:
          name: requirements-dev.txt
          path: raiwidgets/installed-requirements-dev.txt

      - name: Run notebook tests
        shell: bash -l {0}
        run: python -m pytest -s -v notebooks -m vision_notebooks

      - name: Upload notebook test result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: notebook-test-${{ matrix.operatingSystem }}-${{ matrix.pythonVersion }}
          path: notebooks

      - name: Upload e2e test screen shot
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: raiwidgets-e2e-screen-shot
          path: dist/cypress
