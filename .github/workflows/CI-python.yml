name: CI Python

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci-python:
    env:
      node-version: 16.8
    strategy:
      matrix:
        packageDirectory:
          ["raiwidgets", "responsibleai", "rai_core_flask", "erroranalysis"]
        operatingSystem: [ubuntu-latest, macos-latest, windows-latest]
        pythonVersion: [3.6, 3.7, 3.8]
        exclude:
          # segfaults in rai_core_flask tests in most OS-Python version combinations
          - packageDirectory: "rai_core_flask"
            operatingSystem: ubuntu-latest
          # temperately disabled related to an shap issue
          # - packageDirectory: "raiwidgets"
          #   pythonVersion: 3.6
          - packageDirectory: "rai_core_flask"
            operatingSystem: macos-latest
            pythonVersion: 3.7
          - packageDirectory: "rai_core_flask"
            operatingSystem: macos-latest
            pythonVersion: 3.8

    runs-on: ${{ matrix.operatingSystem }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.pythonVersion }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.pythonVersion }}

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.node-version }}

      - name: Install yarn
        run: npm install yarn -g
      - name: Install
        run: yarn install --frozen-lock-file
      - name: Build Typescript
        run: yarn buildall

      - if: ${{ matrix.operatingSystem == 'macos-latest' }}
        name: Use Homebrew to install libomp on MacOS for lightgbm
        run: brew install https://publictestdatasets.blob.core.windows.net/data/libomp-11.1.0.catalina.bottle.tar.gz

      - name: Setup tools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install --upgrade pip-tools

      - name: Pip compile
        run: |
          pip-compile requirements-dev.txt
          cat requirements-dev.txt
        working-directory: ${{ matrix.packageDirectory }}

      - name: Upload requirements
        uses: actions/upload-artifact@v2
        with:
          name: requirements-dev.txt
          path: ${{ matrix.packageDirectory }}/requirements-dev.txt

      - name: Install dependencies
        run: |
          pip-sync requirements-dev.txt
        working-directory: ${{ matrix.packageDirectory }}

      - name: Install package
        run: |
          pip install -v .
        working-directory: ${{ matrix.packageDirectory }}

      - if: ${{ matrix.packageDirectory != 'raiwidgets' }}
        name: Run tests
        run: |
          pytest --durations=10 --doctest-modules --junitxml=junit/test-results.xml --cov=${{ matrix.packageDirectory }} --cov-report=xml --cov-report=html
        working-directory: ${{ matrix.packageDirectory }}

      - if: ${{ matrix.packageDirectory == 'raiwidgets' }}
        name: Run widget tests
        run: yarn e2e-widget

      - if: ${{ matrix.packageDirectory == 'raiwidgets' }}
        name: Run tests
        run: |
          pytest --durations=10
        working-directory: ${{ matrix.packageDirectory }}

      - name: Upload code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.packageDirectory }}-code-coverage-results
          path: ${{ matrix.packageDirectory }}/htmlcov
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() && matrix.packageDirectory != 'raiwidgets'}}
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ matrix.packageDirectory }}
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./${{ matrix.packageDirectory }}/coverage.xml
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
        if: ${{ matrix.packageDirectory != 'raiwidgets'}}
