name: CI Notebooks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  ci-notebook:
    env:
      node-version: 16.x
    strategy:
      matrix:
        operatingSystem: [ubuntu-latest, windows-latest]
        pythonVersion: [3.6, 3.7, 3.8, 3.9, "3.10"]

    runs-on: ${{ matrix.operatingSystem }}

    steps:
      - uses: actions/checkout@v3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.pythonVersion }}

      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node-version }}

      - name: Install yarn
        run: npm install yarn -g

      - name: Install yarn dependencies
        run: |
          yarn config set network-timeout 300000
          yarn install --frozen-lock-file

      - name: Build Typescript
        run: yarn buildall

      - if: ${{ matrix.operatingSystem != 'macos-latest' }}
        name: Install pytorch on non-MacOS
        shell: bash -l {0}
        run: |
          conda install --yes --quiet pytorch torchvision captum cpuonly -c pytorch

      - if: ${{ matrix.operatingSystem == 'macos-latest' }}
        name: Install Anaconda packages on MacOS, which should not include cpuonly according to official docs
        shell: bash -l {0}
        run: |
          conda install --yes --quiet pytorch torchvision captum -c pytorch

      - name: Setup tools
        shell: bash -l {0}
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install --upgrade "pip-tools<=6.13.0"

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          pip install -r requirements-dev.txt
          pip install .
        working-directory: raiwidgets

      - name: Pip freeze
        shell: bash -l {0}
        run: |
          pip freeze > installed-requirements-dev.txt
          cat installed-requirements-dev.txt
        working-directory: raiwidgets

      - name: Upload requirements
        uses: actions/upload-artifact@v3
        with:
          name: requirements-dev.txt
          path: raiwidgets/installed-requirements-dev.txt

      - name: Run notebook tests
        shell: bash -l {0}
        run: python -m pytest notebooks

      - name: Upload notebook test result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: notebook-test-${{ matrix.operatingSystem }}-${{ matrix.pythonVersion }}
          path: notebooks

      - name: Upload e2e test screen shot
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: raiwidgets-e2e-screen-shot
          path: dist/cypress
