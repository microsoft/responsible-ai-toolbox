name: Release to PyPI

# trigger manually only ("collaborator" or more permissions required)
on:
  workflow_dispatch:
    inputs:
      pypiType:
        description: "Test or Prod PyPI?"
        required: true
        default: "Test"
      targetPackage:
        description: "rai-tooling (for both responsibleai and raiwidgets) or wrapped-flask?"
        required: true

jobs:
  release-python:
    runs-on: ubuntu-latest

    steps:
      - name: fail if neither responsibleai, raiwidgets nor wrapped-flask
        if: ${{ ! (github.event.inputs.targetPackage == 'rai-tooling' || github.event.inputs.targetPackage == 'wrapped-flask') }}
        run: |
          echo "Only rai-tooling or wrapped-flask can be used."
          exit 1

      # build wheel
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: install typescript dependencies
        run: |
          yarn install

      - name: auto version
        if: ${{ (github.event.inputs.targetPackage == 'rai-tooling') && github.event.inputs.pypiType == 'Test' }}
        run: |
          yarn auto-version -r
      - name: auto version
        if: ${{ (github.event.inputs.targetPackage == 'rai-tooling') && github.event.inputs.pypiType == 'Prod' }}
        run: |
          yarn auto-version -r -t

      - name: build typescript
        run: |
          yarn buildall
      - name: update and upgrade pip, setuptools, wheel, and twine
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools wheel twine
      #
      - name: install requirements.txt for wrapped-flask
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
        working-directory: wrapped-flask
        if: ${{ github.event.inputs.targetPackage == 'wrapped-flask' }}
      - name: install requirements.txt for raiwidgets
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
        working-directory: raiwidgets
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}
      - name: install requirements.txt for responsibleai
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
        working-directory: responsibleai
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}
      - name: pip freeze
        run: pip freeze
      #
      - name: replace README for raiwidgets
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}
        run: |
          sed -i 's/(.\/img\//(https:\/\/raw.githubusercontent.com\/microsoft\/responsible-ai-widgets\/main\/img\//g' README.md
          cp ./README.md ./raiwidgets/
      - name: replace README for responsibleai
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}
        run: |
          sed -i 's/(.\/img\//(https:\/\/raw.githubusercontent.com\/microsoft\/responsible-ai-widgets\/main\/img\//g' README.md
          cp ./README.md ./responsibleai/
      # =====
      - name: build wheel for wrapped flask
        run: python setup.py sdist bdist_wheel
        working-directory: wrapped-flask
        if: ${{ github.event.inputs.targetPackage == 'wrapped-flask' }}
      - name: build wheel for raiwidgets
        run: python setup.py sdist bdist_wheel
        working-directory: raiwidgets
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}
      - name: build wheel for responsibleai
        run: python setup.py sdist bdist_wheel
        working-directory: responsibleai
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}

      # run tests before publishing to PyPI

      - name: install wrapped-flask wheel locally
        run: find ./dist/ -name '*.whl' -exec pip install {} \;
        working-directory: wrapped-flask
        if: ${{ github.event.inputs.targetPackage == 'wrapped-flask' }}
      - name: install raiwidgets wheel locally
        run: find ./dist/ -name '*.whl' -exec pip install {} \;
        working-directory: raiwidgets
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}
      - name: install responsible wheel locally
        run: find ./dist/ -name '*.whl' -exec pip install {} \;
        working-directory: responsibleai
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}

      - name: run wrapped-flask tests
        run: pytest ./tests/
        working-directory: wrapped-flask
        if: ${{ github.event.inputs.targetPackage == 'wrapped-flask' }}
      - name: run raiwidgets tests
        run: pytest ./tests/
        working-directory: raiwidgets
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}
      - name: run responsibleai tests
        run: pytest ./tests/
        working-directory: responsibleai
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' }}

      ####### publish to PyPI
      # raiwidgets
      - name: Publish raiwidgets package to Test PyPI
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' && github.event.inputs.pypiType == 'Test' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN_RAIWIDGETS }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: raiwidgets/dist/
      - name: Publish raiwidgets package to PyPI
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' && github.event.inputs.pypiType == 'Prod' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN_RAIWIDGETS }}
          packages_dir: raiwidgets/dist/
      # responsibleai
      - name: publish responsibleai package to Test PyPI
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' && github.event.inputs.pypiType == 'Test' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN_RESPONSIBLEAI }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: responsibleai/dist/
      - name: Publish responsibleai package to PyPI
        if: ${{ github.event.inputs.targetPackage == 'rai-tooling' && github.event.inputs.pypiType == 'Prod' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN_RESPONSIBLEAI }}
          packages_dir: responsibleai/dist/
      # wrapped-flask
      - name: Publish wrapped-flask package to Test PyPI
        if: ${{ github.event.inputs.targetPackage == 'wrapped-flask' && github.event.inputs.pypiType == 'Test' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN_RAI_CORE_FLASK }}
          repository_url: https://test.pypi.org/legacy/
          packages_dir: wrapped-flask/dist/
      - name: Publish wrapped-flask package to PyPI
        if: ${{ github.event.inputs.targetPackage == 'wrapped-flask' && github.event.inputs.pypiType == 'Prod' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN_RAI_CORE_FLASK }}
          packages_dir: wrapped-flask/dist/
